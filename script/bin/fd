#!/usr/bin/env python


# imports
import os
import re
import sys


skip_patterns = []

bred = lambda x: "\033[1;31m" + x + "\033[0;38m"
green = lambda x: "\033[0;32m" + x + "\033[0;38m"
red = lambda x: "\033[0;31m" + x + "\033[0;38m"


def helper():
    sys.stdout.write("Usage: %s dir\n"
                     % os.path.basename(__file__))
    sys.exit(0)


def error():
    sys.stderr.write(os.path.basename(__file__) + ": " + \
                     red("error") + "\n")
    sys.stderr.write("Usage: %s dir\n"
                     % os.path.basename(__file__))
    sys.exit(1)


if __name__ == "__main__":

    # check ars
    if "--help" in sys.argv or "-h" in sys.argv:
        helper()

    if len(sys.argv) not in [2]:
        error()

    # get args
    dname = sys.argv[1]

    # collect files
    dlist = []
    for (root, dirs, _) in os.walk(os.getcwd()):
        for d in dirs:
            if dname in d:
                skip = False
                for pattern in skip_patterns:
                    # python2 doesn't implement fullmatch
                    try:
                        if re.fullmatch(pattern.replace('*', '.*'), f):
                            skip = True
                            break
                    except AttributeError:
                        if re.match('^' + pattern.replace('*', '.*') + '$', f):
                            skip = True
                            break
                if not skip:
                    dlist.append(
                        os.path.join(root, d.replace(dname, green(dname))))
    dlist.sort()

    if not dlist:
        sys.exit(0)

    # print output
    sys.stdout.write("\n")
    sys.stdout.write(bred("-" * 70) + "\n")
    sys.stdout.write("\n")

    for d in dlist:
        sys.stdout.write(d + "\n")

    sys.stdout.write("\n")
    sys.stdout.write(bred("-" * 70) + "\n")
    sys.stdout.write("\n")

    sys.exit(0)
