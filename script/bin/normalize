#!/usr/bin/env python

import os
import sys
import unidecode


cyan = lambda x: '\033[0;36m{}\033[0;38m'.format(x)
red = lambda x: '\033[0;31m{}\033[0;38m'.format(x)


def helper():
    """
    Invoke helper.
    """
    sys.stdout.write('Usage: {} string\n'.format(
        os.path.basename(__file__)))
    sys.exit(0)


def error():
    """
    Invoke error.
    """
    sys.stderr.write('{}: {} \n'.format(
        os.path.basename(__file__), red('error')))
    sys.stdout.write('Usage: {} string\n'.format(
        os.path.basename(__file__)))
    sys.exit(1)


def normalize(string):
    """
    Translate to ASCII, lower case, remove special characters.

    Example:
        Input string: 'Kžušček & Sỹ'
        Output string: 'kzusceksy'
    """
    normalized_string = ''.join([
        unidecode.unidecode(char).lower()
        for char in string
        if char.isalnum()
    ])
    return normalized_string


if __name__ == "__main__":

    # Check ars
    if "--help" in sys.argv or "-h" in sys.argv:
        helper()

    if len(sys.argv) < 2:
        error()

    # Normalize string
    sys.stdout.write(' '.join([
        cyan(normalize(string))
        for string in sys.argv[1:]
    ]))
    sys.stdout.write('\n')

    sys.exit(0)
