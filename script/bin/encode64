#!/usr/bin/env python


# imports
import os
import sys
import base64


# colors
bred = lambda x: '\033[1;31m' + x + '\033[0;38m'
cyan = lambda x: '\033[0;36m' + x + '\033[0;38m'
green = lambda x: '\033[0;32m' + x + '\033[0;38m'
red = lambda x: '\033[0;31m' + x + '\033[0;38m'
yellow = lambda x: '\033[0;33m' + x + '\033[0;38m'


def helper():
    sys.stdout.write('Usage: %s file\n'
                     % os.path.basename(__file__))
    sys.exit(0)


def error():
    sys.stderr.write(os.path.basename(__file__) + ': ' + \
                     red('error') + '\n')
    sys.stderr.write('Usage: %s file\n'
                     % os.path.basename(__file__))
    sys.exit(1)


if __name__ == '__main__':

    # check ars
    if '--help' in sys.argv or '-h' in sys.argv:
        helper()

    if len(sys.argv) != 2:
        error()

    # get args
    fpath = sys.argv[1]

    # read file
    with open(fpath, 'rb') as b:
        data = b.read()

    # encode file content
    string = base64.b64encode(data).decode('utf-8')

    # print output
    sys.stderr.write('\n')
    sys.stderr.flush()
    sys.stdout.write(string)
    sys.stdout.flush()
    sys.stderr.write('\n\n')
    sys.stderr.write(green('File encoded (base 64, utf-8)\n'))
    sys.stderr.flush()

    sys.exit(0)
