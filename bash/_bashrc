# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# Don't put duplicate lines or lines starting with space in the history
HISTCONTROL=ignoreboth

# Append to the history file, don't overwrite it
shopt -s histappend

# Set history length
HISTSIZE=1000000
HISTFILESIZE=2000000

# Check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
# shopt -s globstar

# Make less more friendly for non-text input files
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ${HOME}/.dircolors && eval "$(dircolors -b ${HOME}/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    # alias dir='dir --color=auto'
    # alias vdir='vdir --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Some ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Colored GCC warnings and errors
# export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Git prompt
if [ -f ${HOME}/.git-prompt.sh ]; then
    . ${HOME}/.git-prompt.sh
fi

# Show git branch tree
alias gith="git log --graph --all --format=oneline --abbrev-commit --simplify-by-decoration"
alias githh="git log --graph --all --format=oneline --abbrev-commit"
alias githhh="git log --graph --all"

# Anaconda
__conda_setup="$('${HOME}/.anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "${HOME}/.anaconda3/etc/profile.d/conda.sh" ]; then
        . "${HOME}/.anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="${HOME}/.anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
conda activate base

# Vim
alias vi="vim"

# Bin
if [ -d ${HOME}/.bin ]; then
    export PATH="${PATH}:${HOME}/.bin"
fi

# Scripts
if [ -d ${HOME}/.scripts ]; then
    export PATH="${PATH}:${HOME}/.scripts"
fi

# Show file sizes
# Files
duh() {
    du -h --max-depth 1 $@ 2> /dev/null | sort -rh
}
# Directory
dud() {
    du -h -s $@ 2> /dev/null | sort -rh
}
# Filesystem
duf() {
    du -hsx $@/* 2> /dev/null | sort -rh
}

# Suspension
alias enable-suspension="sudo systemctl unmask sleep.target suspend.target hibernate.target hybrid-sleep.target"
alias disable-suspension="sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target"

# Show the differences
diffs() {
    command diff --recursive --exclude=.* $@
}

# Prompt
ps1_yellow() { echo "\[\e[1;33m\]"$1"\[\e[0m\]"; }
ps1_green() { echo "\[\e[1;32m\]"$1"\[\e[0m\]"; }
ps1_date() { echo "\D{%Y/%m/%d-%H:%M:%S}"; }
ps1_hours() { echo "\D{%H:%M:%S}"; }
ps1_working_dir() { echo "\W"; }
ps1_basename() { if [ -z $1 ]; then echo ""; else echo "($(basename $1))$(ps1_space)"; fi; }
ps1_conda_env() { echo "\$(ps1_basename \${CONDA_PREFIX})"; }
ps1_git_branch() { echo "\$(__git_ps1 '(%s)$(ps1_space)')"; }
ps1_dollar() { echo "$"; }
ps1_space() { echo " "; }
PS1=\
$(ps1_yellow "[")\
$(ps1_green $(ps1_hours))\
$(ps1_yellow "]")\
$(ps1_space)\
$(ps1_conda_env)\
$(ps1_yellow $(ps1_working_dir))\
$(ps1_space)\
$(ps1_git_branch)\
$(ps1_green $(ps1_dollar))\
$(ps1_space)
